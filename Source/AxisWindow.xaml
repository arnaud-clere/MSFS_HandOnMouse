<Window x:Class="HandOnMouse.AxisWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:local="clr-namespace:HandOnMouse"
        WindowStartupLocation="Manual" WindowStyle="SingleBorderWindow"
        Icon="Settings.png" ShowInTaskbar="False"
        ResizeMode="NoResize" SizeToContent="WidthAndHeight"
        MinWidth="432" MinHeight="224">
    <Window.Title>
        <MultiBinding StringFormat="To change {0} ({1}):">
            <Binding Path="Axis.AxisToolTip"/>
            <Binding Path="Axis.ExternalName"/>
        </MultiBinding>
    </Window.Title>
    <Window.Resources>
        <Style TargetType="Border">
            <Setter Property="Margin" Value="0,0,0,3" />
        </Style>
        <Style TargetType="Button">
            <Setter Property="Margin" Value="3" />
            <Setter Property="VerticalAlignment" Value="Center" />
        </Style>
        <Style TargetType="ToggleButton">
            <Setter Property="Margin" Value="3" />
            <Setter Property="VerticalAlignment" Value="Center" />
        </Style>
        <Style TargetType="TextBlock">
            <Setter Property="Margin" Value="3" />
            <Setter Property="VerticalAlignment" Value="Center" />
        </Style>
        <Style TargetType="CheckBox">
            <Setter Property="Margin" Value="3" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
        </Style>
        <Style TargetType="ComboBox">
            <Setter Property="Margin" Value="3" />
            <Setter Property="VerticalAlignment" Value="Center" />
        </Style>
        <Style TargetType="StackPanel">
            <Setter Property="Orientation" Value="Horizontal" />
            <Setter Property="VerticalAlignment" Value="Center" />
        </Style>
    </Window.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="1*"/>
            <ColumnDefinition Width="1*"/>
            <ColumnDefinition Width="1*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition/>
            <RowDefinition/>
            <RowDefinition/>
            <RowDefinition Height="92"/>
            <RowDefinition/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <CheckBox Grid.Column="0" Grid.Row="0" Content="For aircraft which title contains:"
                    IsEnabled="{Binding IsSimAircraftKnown}"
                    IsChecked="{Binding IsForAircraft}"/>
        <TextBox Grid.Column="1" Grid.Row="0" Margin="3" VerticalAlignment="Center" FontWeight="SemiBold"
                    IsEnabled="{Binding IsForAircraft}"
                    Text="{Binding SimAircraftTitle}"/>
        <Grid Grid.Column="2" Grid.Row="0" >
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <Button TextBlock.Foreground="Red" 
                    Content="Reset all to default"
                    Click="Button_Reset"/>
            <Button Grid.Column="1" TextBlock.Foreground="Green" 
                    Content="Save all and close" 
                    Click="Button_Save"/>
        </Grid>
        <ToggleButton Grid.Column="0" Grid.Row="1" Focusable="False"
                    Content="Set trigger and mouse move"
                    ToolTip="Once you press this button:&#x0a;1. press the desired mouse/keyboard/controller button/key (except main click)&#x0a;2. move mouse in direction where axis must increase&#x0a;3. release the trigger"
                    Name="SetTriggerButton"
                    Click="SetTriggerButton_Click"/>
        <TextBlock Grid.Column="1" Grid.Row="1" FontWeight="SemiBold" Grid.ColumnSpan="2"
                    Text="{Binding TriggerMoveHint}"/>
        <Border Grid.Column="0" Grid.Row="2" Background="#FFF0FEFF"><StackPanel Orientation="Vertical">
            <StackPanel>
                <TextBlock 
                    Text="1. PRESS Trigger(s):"/>
                <TextBlock FontWeight="Bold" Background="LightGray" HorizontalAlignment="Center"
                    Text="{Binding Axis.TriggerText, UpdateSourceTrigger=PropertyChanged, StringFormat='{} {0} '}"/>
            </StackPanel>
            <TextBlock FontWeight="Bold" HorizontalAlignment="Center" Margin="0"
                    Text="{Binding Axis.TriggerDeviceName, UpdateSourceTrigger=PropertyChanged}"/>
        </StackPanel></Border>
        <Border Grid.Column="1" Grid.Row="2" Grid.ColumnSpan="2" Background="#FFF0FEFF"><StackPanel Orientation="Vertical" VerticalAlignment="Top">
            <CheckBox Margin="3" Style="{StaticResource HideShow}"
                    IsChecked="{Binding Axis.IsHidden}"
                    Content="Hide/Show in Gauge window even with trigger"/>
            <CheckBox Margin="3" Style="{StaticResource UnlockLock}"
                    IsChecked="{Binding Axis.IsEnabled, UpdateSourceTrigger=PropertyChanged}"
                    Content="Lock/Unlock mouse move input even with trigger"/>
            </StackPanel></Border>
        <Border Grid.Column="0" Grid.Row="3" Background="#FFE0FEFF"><StackPanel>
            <TextBlock
                    Text="2. MOVE Mouse:"/>
            <TextBlock Margin="0" FontWeight="Bold" Background="LightGray" HorizontalAlignment="Center"
                    Text="{Binding Axis.IncreaseDirectionText, UpdateSourceTrigger=PropertyChanged, StringFormat='{} {0} '}"/>
            </StackPanel></Border>
        <Border Grid.Column="1" Grid.Row="3" Background="#FFE0FEFF"><StackPanel Orientation="Vertical" VerticalAlignment="Top">
            <StackPanel>
                <ComboBox IsEditable="True" VerticalAlignment="Bottom"
                    Text="{Binding Axis.Sensitivity}"
                    IsEnabled="{Binding Axis.IsEnabled}">
                    <ComboBoxItem>0.25</ComboBoxItem>
                    <ComboBoxItem>0.5</ComboBoxItem>
                    <ComboBoxItem ToolTip="Default sensitivity">1</ComboBoxItem>
                    <ComboBoxItem>2</ComboBoxItem>
                    <ComboBoxItem>4</ComboBoxItem>
                </ComboBox>
                <TextBlock>Relative sensitivity (ratio)</TextBlock>
            </StackPanel>
            <CheckBox
                    IsChecked="{Binding Axis.SensitivityAtCruiseSpeed}"
                    Content="Sensitivity smartly increases with IAS/Vc"
                    ToolTip="For axis which efficacy depend on IAS: aileron, trims..."/>
                <CheckBox 
                    IsEnabled="{Binding Axis.IsTrim}"
                    IsChecked="{Binding Axis.TrimCounterCenteringMove}" 
                    ToolTip="For trim axis that should oppose centering moves of related axis"
                    Content="Oppose centering moves of axis below:"/>
                <TextBlock FontWeight="Bold" HorizontalAlignment="Center" Margin="0"
                    Text="{Binding Axis.TrimmedAxisName}"></TextBlock>
            </StackPanel></Border>
        <Border Grid.Column="2" Grid.Row="3" Background="#FFE0FEFF">
            <StackPanel Orientation="Vertical" VerticalAlignment="Top">
                <TextBlock
                    ToolTip="For continuous axis where detents can be simulated by a orthogonal change in mouse move direction: throttle...">
                    Smart detents (move 
                    <TextBlock Margin="0" FontWeight="Bold" Background="LightGray" HorizontalAlignment="Center"
                    Text="{Binding Axis.DetentDirectionText, UpdateSourceTrigger=PropertyChanged, StringFormat='{} {0} '}"/>
                    to pass):
                    </TextBlock>
                <StackPanel>
                    <ComboBox IsEditable="True" VerticalAlignment="Bottom"
                    Text="{Binding Axis.NegativeDetent}">
                        <ComboBoxItem>0</ComboBoxItem>
                        <ComboBoxItem>50</ComboBoxItem>
                        <ComboBoxItem ToolTip="No detent">100</ComboBoxItem>
                    </ComboBox>
                    <TextBlock 
                    Text="Negative detent position (%)"
                    ToolTip="For axis where min negative position should be protected with a detent: reverse, feather..."/>
                    </StackPanel>
                <StackPanel>
                    <ComboBox IsEditable="True" VerticalAlignment="Bottom"
                    Text="{Binding Axis.PositiveDetent}">
                        <ComboBoxItem>70</ComboBoxItem>
                        <ComboBoxItem>75</ComboBoxItem>
                        <ComboBoxItem>80</ComboBoxItem>
                        <ComboBoxItem>85</ComboBoxItem>
                        <ComboBoxItem>90</ComboBoxItem>
                        <ComboBoxItem>95</ComboBoxItem>
                        <ComboBoxItem ToolTip="No detent">100</ComboBoxItem>
                    </ComboBox>
                    <TextBlock 
                    Text="Positive detent position (%)"
                    ToolTip="For axis where max positive position should be protected with a detent: auto/throttle..."/>
                </StackPanel>
            </StackPanel></Border>
        <Border Grid.Column="0" Grid.Row="4" Background="#FFF0FEFF">
            <TextBlock
                    Text="3. RELEASE Trigger(s)"/>
        </Border>
        <Border Grid.Column="1" Grid.Row="4" Grid.ColumnSpan="2" Background="#FFF0FEFF"><StackPanel Orientation="Vertical" VerticalAlignment="Top">
            <CheckBox
                    IsChecked="{Binding Axis.WaitTriggerReleased}" 
                    Content="Wait for trigger release to change axis" 
                    ToolTip="For axis that should be adjusted and confirmed before it is actually moved"/>
            <StackPanel>
                <ComboBox IsEditable="True" VerticalAlignment="Bottom"
                    Text="{Binding Axis.DecreaseScaleTimeSecs}">
                    <ComboBoxItem ToolTip="Stay in position when released">0</ComboBoxItem>
                    <ComboBoxItem>0.25</ComboBoxItem>
                    <ComboBoxItem>0.5</ComboBoxItem>
                    <ComboBoxItem>1</ComboBoxItem>
                    <ComboBoxItem>2</ComboBoxItem>
                    <ComboBoxItem ToolTip="Quickly go to neutral when released">4</ComboBoxItem>
                    </ComboBox>
                <TextBlock 
                    Text="Time (s) to decrease to neutral (0)"
                    ToolTip="For axis that should go to neutral when released: rudder, brakes..."/>
            </StackPanel>
            <StackPanel>
                <ComboBox IsEditable="True" VerticalAlignment="Bottom"
                    Text="{Binding Axis.AllowedExternalChangePerSec}">
                    <ComboBoxItem ToolTip="None (HandOnMouse prohibits other inputs)">0</ComboBoxItem>
                    <ComboBoxItem ToolTip="Up to the wole axis range (max-min) in 5s">0.2</ComboBoxItem>
                    <ComboBoxItem ToolTip="Up to the wole axis range (max-min) in 1s">1</ComboBoxItem>
                    <ComboBoxItem ToolTip="Up to the wole axis range (max-min) in 0.2s">5</ComboBoxItem>
                    <ComboBoxItem ToolTip="Any (HandOnMouse allows full change between 2 simulator frames)">20</ComboBoxItem>
                    </ComboBox>
                <TextBlock
                    Text="Allowed external change rate (/s)"
                    ToolTip="To increase HandOnMouse accuracy or limit unexpected changes from MSFS or another tool connected to it"/>
            </StackPanel>
        </StackPanel></Border>
    </Grid>
</Window>
