<Window x:Class="HandOnMouse.GaugeWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:HandOnMouse"
    xmlns:properties="clr-namespace:HandOnMouse.Properties" 
    Title="HandOnMouse Gauges" SizeToContent="WidthAndHeight" 
    ShowInTaskbar="False"
    AllowsTransparency="True" 
    WindowStyle="None" 
    Topmost="True"
    WindowStartupLocation="Manual"
    MouseDown="Window_MouseDown"
    Icon="mouse.ico"
    Top="{Binding Source={x:Static properties:Settings.Default}, Path=GaugeTop, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
    Left="{Binding Source={x:Static properties:Settings.Default}, Path=GaugeLeft, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
    >
    <Window.Background><SolidColorBrush Opacity="0"/></Window.Background>
    <Window.Resources>
        <Style TargetType="TextBlock">
            <Setter Property="VerticalAlignment" Value="Center" />
        </Style>
        <BooleanToVisibilityConverter x:Key="B2V"/>
    </Window.Resources>
    <StackPanel x:Name="window" VerticalAlignment="Top" Margin="3">
        <TextBlock Foreground="DarkGoldenrod" TextAlignment="Left" FontWeight="DemiBold"
                            FontSize="{Binding Source={x:Static properties:Settings.Default}, Path=GaugeFontSize, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                            Text="{Binding Status, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}">
        </TextBlock>
        <ItemsControl Height="Auto" ItemsSource="{Binding Mappings}">
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <Grid Margin="0 3 0 0" Visibility="{Binding IsVisible, Converter={StaticResource B2V}}">
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="{Binding SimVarNegativeScaleString      , UpdateSourceTrigger=PropertyChanged}"/><!--, StringFormat={}{0:0.##}*}"/>-->
                            <ColumnDefinition Width="{Binding SimVarPositiveScaleString      , UpdateSourceTrigger=PropertyChanged}"/><!--, StringFormat={}{0:0.##}*}"/>-->
                            <ColumnDefinition Width="{Binding SimVarPositiveDetentScaleString, UpdateSourceTrigger=PropertyChanged}"/><!--, StringFormat={}{0:0.##}*}"/>-->
                        </Grid.ColumnDefinitions>
                            <ProgressBar Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="3" TextBlock.TextAlignment="Left" BorderThickness="0"
                            Value="{Binding Value, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" 
                            ToolTip="{Binding SimVarUnit, UpdateSourceTrigger=PropertyChanged}"
                            Minimum="{Binding SimVarMin, UpdateSourceTrigger=PropertyChanged}" 
                            Maximum="{Binding SimVarMax, UpdateSourceTrigger=PropertyChanged}">
                            <ProgressBar.Foreground>
                                <SolidColorBrush Color="LightCyan"
                                                 Opacity="{Binding Source={x:Static properties:Settings.Default}, Path=GaugeOpacity, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"/>
                            </ProgressBar.Foreground>
                            <ProgressBar.Background>
                                <SolidColorBrush Color="DarkCyan" Opacity="0.2"/>
                            </ProgressBar.Background>
                        </ProgressBar>
                        <TextBlock Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="3" TextAlignment="Left" FontWeight="DemiBold"
                            FontSize="{Binding Source={x:Static properties:Settings.Default}, Path=GaugeFontSize, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                            Text="{Binding Text, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}">
                            <TextBlock.Foreground>
                                <SolidColorBrush Color="{Binding ChangeColorForText, UpdateSourceTrigger=PropertyChanged}"/>
                            </TextBlock.Foreground>
                        </TextBlock>
                        <Rectangle Grid.Row="1" Grid.Column="0" 
                            Height="{Binding Source={x:Static properties:Settings.Default}, Path=SimVarScaleHeightInPixels}"
                            Fill="{Binding SimVarNegativeColor}"/>
                        <Rectangle Grid.Row="1" Grid.Column="1" 
                            Height="{Binding Source={x:Static properties:Settings.Default}, Path=SimVarScaleHeightInPixels}"
                            Fill="{Binding SimVarPositiveColor}"/>
                        <Rectangle Grid.Row="1" Grid.Column="2" 
                            Height="{Binding Source={x:Static properties:Settings.Default}, Path=SimVarScaleHeightInPixels}"
                            Fill="{Binding SimVarPositiveDetentColor}"/>
                    </Grid>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>
    </StackPanel>
</Window>
