<Window x:Class="HandOnMouse.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:HandOnMouse"
    xmlns:properties="clr-namespace:HandOnMouse.Properties" 
    Title="MSFS HandOnMouse" 
    Icon="Mouse.ico"
    WindowStyle="SingleBorderWindow"
    WindowStartupLocation="CenterScreen"
    ResizeMode="NoResize" SizeToContent="Height" Width="300"
    MouseDown="Window_MouseDown"
    KeyDown="Window_KeyDown"
    Closing="Window_Closing">
    <Window.Background><SolidColorBrush Color="{DynamicResource {x:Static SystemColors.ControlColorKey}}"/></Window.Background>
    <Window.Resources>
        <Style TargetType="TextBlock">
            <Setter Property="VerticalAlignment" Value="Center" />
        </Style>
        <Style TargetType="Button">
            <Setter Property="Width" Value="20" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="Background">
                <Setter.Value>
                    <SolidColorBrush Color="{DynamicResource {x:Static SystemColors.ControlColorKey}}"/>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="CheckBox">
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
        </Style>
    </Window.Resources>
    <StackPanel x:Name="window" VerticalAlignment="Top" Margin="3 3 0 0">
        <TextBlock TextWrapping="Wrap">
            Handle cockpit controls using mouse gestures:<LineBreak/>
            - a trigger (mouse Back/Forward/... or joystick button)<LineBreak/>
            - and a combined mouse move (←↑↓→)</TextBlock>
        <TextBlock Margin="0 6 0 0" TextWrapping="Wrap" FontWeight="Bold">
            Select predefined mappings, adjust if needed:</TextBlock>
        <DockPanel Margin="0 3 0 0">
            <Button DockPanel.Dock="Right" Margin="3" Width="16" Height="16" BorderThickness="0" 
                    Click="Button_MappingFile"
                    ToolTip="Customize mappings files">
                <Image Source="Settings.png"/>
            </Button>
            <!-- FIXME Remove IsEditable by binding SelectedItem to a dedicated property -->
            <ComboBox IsEditable="True"
                    Text="{Binding Source={x:Static properties:Settings.Default}, Path=MappingFile, Mode=TwoWay}"
                    ItemsSource="{Binding MappingFiles}"
                    SelectionChanged="ComboBox_SelectionChanged"/>
        </DockPanel>
        <ItemsControl Height="Auto" ItemsSource="{Binding Mappings}">
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <DockPanel Margin="0 3 0 0">
                        <CheckBox DockPanel.Dock="Left" Style="{StaticResource HideShow}" 
                                IsChecked="{Binding IsPersistentlyHidden, UpdateSourceTrigger=PropertyChanged}"
                                ToolTip="Hide/Show in Gauge window even if a trigger is defined"/>
                        <TextBlock DockPanel.Dock="Left" Width="35" FontSize="8" TextAlignment="Center" VerticalAlignment="Center"
                                Text="{Binding ValueMin, UpdateSourceTrigger=PropertyChanged, StringFormat='{}{0:0.#}'}"
                                ToolTip="{Binding ValueUnit}"/>
                        <Button DockPanel.Dock="Right" Margin="0,0,3,0" Height="16" Width="16" BorderThickness="0"
                                ToolTip="Define trigger, mouse move direction, and other options"
                                Tag="{Binding}"
                                Click="Axis_Click">
                                <Image Source="Settings.png"/></Button>
                        <TextBlock DockPanel.Dock="Right" Width="50" VerticalAlignment="Center"
                                Text="{Binding InputText, UpdateSourceTrigger=PropertyChanged}"
                                ToolTip="{Binding InputToolTip}"/>
                        <CheckBox DockPanel.Dock="Right" Style="{StaticResource UnlockLock}" 
                                IsChecked="{Binding IsPersistentlyEnabled, UpdateSourceTrigger=PropertyChanged}"
                                ToolTip="Lock/Unlock mouse move input even if a trigger is defined"/>
                        <TextBlock DockPanel.Dock="Right" Width="35" FontSize="8" TextAlignment="Center" VerticalAlignment="Center"
                                Text="{Binding ValueMax, UpdateSourceTrigger=PropertyChanged, StringFormat='{}{0:0.#}'}"
                                ToolTip="{Binding ValueUnit}"/>
                        <Grid Margin="0 3 0 0">
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition Height="3"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="{Binding NegativeScaleString, UpdateSourceTrigger=PropertyChanged}"/>
                                <ColumnDefinition Width="{Binding PositiveScaleString, UpdateSourceTrigger=PropertyChanged}"/>
                                <ColumnDefinition Width="{Binding MaxScaleString     , UpdateSourceTrigger=PropertyChanged}"/>
                            </Grid.ColumnDefinitions>
                            <ProgressBar Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="3" TextBlock.TextAlignment="Left" BorderThickness="0" Foreground="White" Background="LightGray"
                                Value="{Binding SimVarValue, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" 
                                Minimum="{Binding ValueMin, UpdateSourceTrigger=PropertyChanged}" 
                                Maximum="{Binding ValueMax, UpdateSourceTrigger=PropertyChanged}"/>
                            <TextBlock Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="3" TextAlignment="Left"
                                Text="{Binding Text, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}">
                                <TextBlock.Foreground>
                                    <SolidColorBrush Color="{Binding ChangeColorForText, UpdateSourceTrigger=PropertyChanged}"/>
                                </TextBlock.Foreground>
                            </TextBlock>
                            <Rectangle Grid.Row="1" Grid.Column="0" 
                                Fill="{Binding NegativeScaleColor}"/>
                            <Rectangle Grid.Row="1" Grid.Column="1" 
                                Fill="{Binding PositiveScaleColor}"/>
                            <Rectangle Grid.Row="1" Grid.Column="2" 
                                Fill="{Binding MaxScaleColor}"/>
                        </Grid>
                    </DockPanel>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>
        <TextBlock Margin="0 6 0 0" TextWrapping="Wrap" FontWeight="Bold">
                    Connect to MSFS:</TextBlock>
        <DockPanel>
            <Button DockPanel.Dock="Right" Margin="0 0 3 0" x:Name="connectButton" Width="100" Background="White" Foreground="DarkGreen" BorderBrush="DarkGreen" 
                    Click="Connect_Click">
                    CONNECT</Button>
            <CheckBox
                    IsChecked="{Binding Source={x:Static properties:Settings.Default}, Path=AutoConnect, Mode=TwoWay}"
                    Content="Auto (re)connect"
                    ToolTip="Automatically (re)connects to MSFS via SimConnect (1Hz)"/>
        </DockPanel>
        <StackPanel MouseEnter="GaugePanel_MouseEnter" MouseLeave="GaugePanel_MouseLeave">
        <TextBlock Margin="0 6 0 0" TextWrapping="Wrap" FontWeight="Bold">
                    Drag HandOnMouse Gauge window to its place<LineBreak/>
                    and/or adjust its settings if needed:</TextBlock>
        <DockPanel Margin="0 3 0 0">
            <CheckBox DockPanel.Dock="Right" Style="{StaticResource CollapseExpand}"  
                    IsChecked="{Binding Source={x:Static properties:Settings.Default}, Path=GaugeSettingsVisible, Mode=TwoWay}"
                    ToolTip="Collapse/Expand Gauge window settings"/>
            <CheckBox DockPanel.Dock="Left" Style="{StaticResource HideShow}"  
                    IsChecked="{Binding Source={x:Static properties:Settings.Default}, Path=GaugeHidden, Mode=TwoWay}"
                    ToolTip="Hide/Show Gauge window"/>
            <TextBlock>Hide/Show Gauges window</TextBlock>
        </DockPanel>
        <DockPanel Margin="0 3 0 0"
                    Visibility="{Binding Source={x:Static properties:Settings.Default}, Path=GaugeSettingsVisible, Converter={StaticResource B2V}}">
            <ComboBox DockPanel.Dock="Left" Margin="0 0 3 0" Width="50" IsEditable="True"
                    IsEnabled="{Binding GaugeVisible}"
                    Text="{Binding Source={x:Static properties:Settings.Default}, Path=GaugeFontSize, Mode=TwoWay}">
                <ComboBoxItem>16</ComboBoxItem>
                <ComboBoxItem>14</ComboBoxItem>
                <ComboBoxItem>12</ComboBoxItem>
                <ComboBoxItem>10</ComboBoxItem>
                <ComboBoxItem>8</ComboBoxItem>
            </ComboBox>
            <TextBlock>Gauges window text size (pt)</TextBlock>
        </DockPanel>
        <DockPanel Margin="0 3 0 0"
                    Visibility="{Binding Source={x:Static properties:Settings.Default}, Path=GaugeSettingsVisible, Converter={StaticResource B2V}}">
            <ComboBox DockPanel.Dock="Left" Margin="0 0 3 0" Width="50" IsEditable="True"
                IsEnabled="{Binding GaugeVisible}"
                Text="{Binding Source={x:Static properties:Settings.Default}, Path=GaugeOpacity, Mode=TwoWay}">
                <ComboBoxItem ToolTip="Opaque">1</ComboBoxItem>
                <ComboBoxItem>0.75</ComboBoxItem>
                <ComboBoxItem>0.5</ComboBoxItem>
                <ComboBoxItem>0.25</ComboBoxItem>
            </ComboBox>
            <TextBlock>Gauge bars opacity (ratio)</TextBlock>
        </DockPanel>
        <DockPanel Margin="0 3 0 0"
                Visibility="{Binding Source={x:Static properties:Settings.Default}, Path=GaugeSettingsVisible, Converter={StaticResource B2V}}">
            <ComboBox DockPanel.Dock="Left" Margin="0 0 3 0" Width="50" IsEditable="True"
                IsEnabled="{Binding GaugeVisible}"
                Text="{Binding Source={x:Static properties:Settings.Default}, Path=SimVarScaleHeightInPixels, Mode=TwoWay}">
                <ComboBoxItem ToolTip="No scale under gauges">0</ComboBoxItem>
                <ComboBoxItem>1</ComboBoxItem>
                <ComboBoxItem>2</ComboBoxItem>
                <ComboBoxItem>3</ComboBoxItem>
            </ComboBox>
            <TextBlock>Gauge scales width (px)</TextBlock>
        </DockPanel>
        </StackPanel>
        <TextBlock Margin="0 6 0 0" TextWrapping="Wrap" FontWeight="Bold">Adjust mouse move sensitivity if needed:</TextBlock>
        <DockPanel Margin="0 3 0 0">
            <ComboBox DockPanel.Dock="Left" Margin="0 0 3 0" Width="50" IsEditable="True"
                Text="{Binding Source={x:Static properties:Settings.Default}, Path=Sensitivity}">
                <ComboBoxItem>16</ComboBoxItem>
                <ComboBoxItem ToolTip="e.g. 800dpi/1in, 1600dpi/2in">8</ComboBoxItem>
                <ComboBoxItem ToolTip="e.g. 800dpi/2in">4</ComboBoxItem>
                <ComboBoxItem>2</ComboBoxItem>
                <ComboBoxItem>1</ComboBoxItem>
                <ComboBoxItem ToolTip="Disable mouse gestures">0</ComboBoxItem>
            </ComboBox>
            <TextBlock>Mouse move sensitivity (100x res./range)</TextBlock>
        </DockPanel>
        <TextBlock Margin="0 6 0 0" TextWrapping="Wrap" FontWeight="Bold">
                Look for more information and/or help if needed:</TextBlock>
        <TextBlock Margin="3 0 3 3" TextAlignment="Center">
            <Hyperlink NavigateUri="https://github.com/arnaud-clere/MSFS_HandOnMouse#readme">Instructions</Hyperlink> |
            <Hyperlink NavigateUri="https://github.com/arnaud-clere/MSFS_HandOnMouse/blob/main/CHANGELOG.md#version-30">Release notes</Hyperlink> |
            <Hyperlink NavigateUri="https://github.com/arnaud-clere/MSFS_HandOnMouse/issues">Known issues</Hyperlink> |
            <Hyperlink NavigateUri="https://github.com/arnaud-clere/MSFS_HandOnMouse/blob/main/LICENSE.md">License</Hyperlink></TextBlock>
    </StackPanel>
</Window>
