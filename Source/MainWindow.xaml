<Window x:Class="HandOnMouse.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:properties="clr-namespace:HandOnMouse.Properties" 
    xmlns:local="clr-namespace:HandOnMouse"
    Title="HandOnMouse" SizeToContent="Height" Width="160"
    AllowsTransparency="True" WindowStyle="None" Topmost="True"
    WindowStartupLocation="CenterScreen"
    ResizeMode="CanResizeWithGrip" MinWidth="125" MinHeight="75"
    SizeChanged="Window_SizeChanged"
    MouseDown="Window_MouseDown">
    <Window.Background><SolidColorBrush Opacity="0.25" Color="White" x:Name="WindowBackground" /></Window.Background>
    <Window.Resources>
        <Style TargetType="TextBlock">
            <Setter Property="FontSize" Value="8" />
            <Setter Property="VerticalAlignment" Value="Center" />
        </Style>
        <Style TargetType="Button">
            <Setter Property="FontSize" Value="8" />
            <Setter Property="Width" Value="14" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="Opacity" Value="0.75" />
        </Style>
        <BooleanToVisibilityConverter x:Key="B2V"/>
    </Window.Resources>
    <StackPanel x:Name="window" VerticalAlignment="Top" Margin="3">
        <DockPanel>
            <Button DockPanel.Dock="Right" Click="Window_Close">X</Button>
            <Button DockPanel.Dock="Right" Click="Window_Compact">=</Button>
            <Button DockPanel.Dock="Right" Click="Window_Minimize">-</Button>
            <Button DockPanel.Dock="Left"  Click="Window_Help"
                Visibility="{Binding ShowAll, Converter={StaticResource B2V}}">?</Button>
            <Button DockPanel.Dock="Left" Click="Window_File"
                Visibility="{Binding ShowAll, Converter={StaticResource B2V}}">...</Button>
            <Border Padding="1">
                <Border.Background><SolidColorBrush Opacity="0.5" Color="LightGray"/></Border.Background>
                <TextBlock Name="MappingsFile" FontSize="10" Margin="0,0,3,0"
                Text="{Binding Source={x:Static properties:Settings.Default}, Path=MappingFile}"
                Foreground="{Binding StatusBrushForText, UpdateSourceTrigger=PropertyChanged}">
                </TextBlock>
            </Border>
        </DockPanel>
        <StackPanel Margin="0 3 0 0" Visibility="{Binding ShowAll, Converter={StaticResource B2V}}">
            <TextBlock FontSize="10">Sensitivity (100x res./range)</TextBlock>
            <DockPanel>
                <Button DockPanel.Dock="Right" Margin="3 0 0 0" x:Name="connectButton" FontSize="12" Width="80" Background="White" Foreground="DarkGreen" BorderBrush="DarkGreen" Click="Connect_Click">CONNECT FS</Button>
                <ComboBox IsEditable="True"
                    Text="{Binding Source={x:Static properties:Settings.Default}, Path=Sensitivity}">
                    <ComboBoxItem>16</ComboBoxItem>
                    <ComboBoxItem ToolTip="e.g. 800dpi/1in, 1600dpi/2in">8</ComboBoxItem>
                    <ComboBoxItem ToolTip="e.g. 800dpi/2in">4</ComboBoxItem>
                    <ComboBoxItem>2</ComboBoxItem>
                    <ComboBoxItem>1</ComboBoxItem>
                    <ComboBoxItem ToolTip="No mouse input">0</ComboBoxItem>
                </ComboBox>
            </DockPanel>
        </StackPanel>
        <ItemsControl Height="Auto" ItemsSource="{Binding Mappings}">
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <StackPanel>
                        <DockPanel Margin="0 3 0 0">
                            <TextBlock Width="20" DockPanel.Dock="Left"  TextAlignment="Center" FontSize="8"
                                    Visibility="{Binding DataContext.ShowAll, Converter={StaticResource B2V}, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"
                                    Text="{Binding SimVarMin, UpdateSourceTrigger=PropertyChanged}"></TextBlock>
                            <TextBlock Width="20" DockPanel.Dock="Right" TextAlignment="Center" FontSize="8"
                                    Visibility="{Binding DataContext.ShowAll, Converter={StaticResource B2V}, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}" 
                                    Text="{Binding SimVarMax, UpdateSourceTrigger=PropertyChanged}"></TextBlock>
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="{Binding SimVarNegativeScaleString, UpdateSourceTrigger=PropertyChanged}"/><!--, StringFormat={}{0:0.##}*}"/>-->
                                    <ColumnDefinition Width="{Binding SimVarPositiveScaleString, UpdateSourceTrigger=PropertyChanged}"/><!--, StringFormat={}{0:0.##}*}"/>-->
                                </Grid.ColumnDefinitions>
                                <ProgressBar Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" TextBlock.TextAlignment="Left" 
                                    Value="{Binding Value, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" 
                                    ToolTip="{Binding SimVarUnit, UpdateSourceTrigger=PropertyChanged}"
                                    Minimum="{Binding SimVarMin, UpdateSourceTrigger=PropertyChanged}" 
                                    Maximum="{Binding SimVarMax, UpdateSourceTrigger=PropertyChanged}">
                                    <ProgressBar.Foreground><SolidColorBrush Opacity="0.50" Color="White"/></ProgressBar.Foreground>
                                    <ProgressBar.Background><SolidColorBrush Opacity="0.50" Color="LightGray"/></ProgressBar.Background>
                                </ProgressBar>
                                <TextBlock Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" TextAlignment="Left" FontSize="8" FontWeight="DemiBold"
                                    Text="{Binding Text, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, StringFormat={}{0:0.##}}">
                                    <TextBlock.Foreground>
                                        <SolidColorBrush Color="{Binding ChangeColorForText, UpdateSourceTrigger=PropertyChanged}"/>
                                    </TextBlock.Foreground>
                                </TextBlock>
                                <Rectangle Grid.Row="1" Grid.Column="0" Opacity=".75" Height="1"
                                    Fill="{Binding SimVarNegativeColor}" 
                                    Visibility="{Binding HasSimVarNegativeColor, Converter={StaticResource B2V}}"></Rectangle>
                                <Rectangle Grid.Row="1" Grid.Column="1" Opacity=".75" Height="1" 
                                    Fill="{Binding SimVarPositiveColor}" 
                                    Visibility="{Binding HasSimVarPositiveColor, Converter={StaticResource B2V}}"></Rectangle>
                            </Grid>
                        </DockPanel>
                    </StackPanel>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>
    </StackPanel>
</Window>
